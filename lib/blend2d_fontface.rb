# Ruby-Blend2D : Yet another Blend2D wrapper for Ruby
#
# * https://github.com/vaiorabbit/blend2d-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'
require_relative 'blend2d_array'
require_relative 'blend2d_bitset'
require_relative 'blend2d_filesystem'
require_relative 'blend2d_fontdata'
require_relative 'blend2d_fontdefs'
require_relative 'blend2d_geometry'
require_relative 'blend2d_glyphbuffer'
require_relative 'blend2d_object'
require_relative 'blend2d_path'
require_relative 'blend2d_string'

module Blend2D
  extend FFI::Library
  # Define/Macro


  # Enum

  BL_FONT_FACE_NO_FLAGS = 0
  BL_FONT_FACE_FLAG_TYPOGRAPHIC_NAMES = 1
  BL_FONT_FACE_FLAG_TYPOGRAPHIC_METRICS = 2
  BL_FONT_FACE_FLAG_CHAR_TO_GLYPH_MAPPING = 4
  BL_FONT_FACE_FLAG_HORIZONTAL_METIRCS = 16
  BL_FONT_FACE_FLAG_VERTICAL_METRICS = 32
  BL_FONT_FACE_FLAG_HORIZONTAL_KERNING = 64
  BL_FONT_FACE_FLAG_VERTICAL_KERNING = 128
  BL_FONT_FACE_FLAG_OPENTYPE_FEATURES = 256
  BL_FONT_FACE_FLAG_PANOSE_DATA = 512
  BL_FONT_FACE_FLAG_UNICODE_COVERAGE = 1024
  BL_FONT_FACE_FLAG_BASELINE_Y_EQUALS_0 = 4096
  BL_FONT_FACE_FLAG_LSB_POINT_X_EQUALS_0 = 8192
  BL_FONT_FACE_FLAG_VARIATION_SEQUENCES = 268435456
  BL_FONT_FACE_FLAG_OPENTYPE_VARIATIONS = 536870912
  BL_FONT_FACE_FLAG_SYMBOL_FONT = 1073741824
  BL_FONT_FACE_FLAG_LAST_RESORT_FONT = 2147483648
  BL_FONT_FACE_FLAG_FORCE_UINT = 4294967295
  BL_FONT_FACE_DIAG_NO_FLAGS = 0
  BL_FONT_FACE_DIAG_WRONG_NAME_DATA = 1
  BL_FONT_FACE_DIAG_FIXED_NAME_DATA = 2
  BL_FONT_FACE_DIAG_WRONG_KERN_DATA = 4
  BL_FONT_FACE_DIAG_FIXED_KERN_DATA = 8
  BL_FONT_FACE_DIAG_WRONG_CMAP_DATA = 16
  BL_FONT_FACE_DIAG_WRONG_CMAP_FORMAT = 32
  BL_FONT_FACE_DIAG_FORCE_UINT = 4294967295
  BL_FONT_OUTLINE_TYPE_NONE = 0
  BL_FONT_OUTLINE_TYPE_TRUETYPE = 1
  BL_FONT_OUTLINE_TYPE_CFF = 2
  BL_FONT_OUTLINE_TYPE_CFF2 = 3
  BL_FONT_OUTLINE_TYPE_MAX_VALUE = 3
  BL_FONT_OUTLINE_TYPE_FORCE_UINT = 4294967295

  # Typedef

  typedef :int, :BLFontFaceFlags
  typedef :int, :BLFontFaceDiagFlags
  typedef :int, :BLFontOutlineType

  # Struct

  class BLFontFaceInfo < FFI::Struct
    layout(
      :faceType, :uchar,
      :outlineType, :uchar,
      :reserved8, [:uchar, 2],
      :glyphCount, :uint,
      :revision, :uint,
      :faceIndex, :uint,
      :faceFlags, :uint,
      :diagFlags, :uint,
      :reserved, [:uint, 2],
    )
  end

  class BLFontFaceCore < FFI::Struct
    layout(
      :_d, BLObjectDetail,
    )
  end

  class BLFontFaceVirt < FFI::Struct
    layout(
      :base, BLObjectVirtBase,
    )
  end

  class BLFontFaceImpl < FFI::Struct
    layout(
      :virt, :pointer,
      :weight, :ushort,
      :stretch, :uchar,
      :style, :uchar,
      :faceInfo, BLFontFaceInfo,
      :uniqueId, :ulong_long,
      :data, BLFontDataCore,
      :fullName, BLStringCore,
      :familyName, BLStringCore,
      :subfamilyName, BLStringCore,
      :postScriptName, BLStringCore,
      :designMetrics, BLFontDesignMetrics,
      :unicodeCoverage, BLFontUnicodeCoverage,
      :panose, BLFontPanose,
    )
  end


  # Function

  def self.setup_fontface_symbols(output_error = false)
    symbols = [
      :blFontFaceInit,
      :blFontFaceInitMove,
      :blFontFaceInitWeak,
      :blFontFaceDestroy,
      :blFontFaceReset,
      :blFontFaceAssignMove,
      :blFontFaceAssignWeak,
      :blFontFaceEquals,
      :blFontFaceCreateFromFile,
      :blFontFaceCreateFromData,
      :blFontFaceGetFullName,
      :blFontFaceGetFamilyName,
      :blFontFaceGetSubfamilyName,
      :blFontFaceGetPostScriptName,
      :blFontFaceGetFaceInfo,
      :blFontFaceGetDesignMetrics,
      :blFontFaceGetUnicodeCoverage,
      :blFontFaceGetCharacterCoverage,
      :blFontFaceHasScriptTag,
      :blFontFaceHasFeatureTag,
      :blFontFaceHasVariationTag,
      :blFontFaceGetScriptTags,
      :blFontFaceGetFeatureTags,
      :blFontFaceGetVariationTags,
    ]
    apis = {
      :blFontFaceInit => :blFontFaceInit,
      :blFontFaceInitMove => :blFontFaceInitMove,
      :blFontFaceInitWeak => :blFontFaceInitWeak,
      :blFontFaceDestroy => :blFontFaceDestroy,
      :blFontFaceReset => :blFontFaceReset,
      :blFontFaceAssignMove => :blFontFaceAssignMove,
      :blFontFaceAssignWeak => :blFontFaceAssignWeak,
      :blFontFaceEquals => :blFontFaceEquals,
      :blFontFaceCreateFromFile => :blFontFaceCreateFromFile,
      :blFontFaceCreateFromData => :blFontFaceCreateFromData,
      :blFontFaceGetFullName => :blFontFaceGetFullName,
      :blFontFaceGetFamilyName => :blFontFaceGetFamilyName,
      :blFontFaceGetSubfamilyName => :blFontFaceGetSubfamilyName,
      :blFontFaceGetPostScriptName => :blFontFaceGetPostScriptName,
      :blFontFaceGetFaceInfo => :blFontFaceGetFaceInfo,
      :blFontFaceGetDesignMetrics => :blFontFaceGetDesignMetrics,
      :blFontFaceGetUnicodeCoverage => :blFontFaceGetUnicodeCoverage,
      :blFontFaceGetCharacterCoverage => :blFontFaceGetCharacterCoverage,
      :blFontFaceHasScriptTag => :blFontFaceHasScriptTag,
      :blFontFaceHasFeatureTag => :blFontFaceHasFeatureTag,
      :blFontFaceHasVariationTag => :blFontFaceHasVariationTag,
      :blFontFaceGetScriptTags => :blFontFaceGetScriptTags,
      :blFontFaceGetFeatureTags => :blFontFaceGetFeatureTags,
      :blFontFaceGetVariationTags => :blFontFaceGetVariationTags,
    }
    args = {
      :blFontFaceInit => [:pointer],
      :blFontFaceInitMove => [:pointer, :pointer],
      :blFontFaceInitWeak => [:pointer, :pointer],
      :blFontFaceDestroy => [:pointer],
      :blFontFaceReset => [:pointer],
      :blFontFaceAssignMove => [:pointer, :pointer],
      :blFontFaceAssignWeak => [:pointer, :pointer],
      :blFontFaceEquals => [:pointer, :pointer],
      :blFontFaceCreateFromFile => [:pointer, :pointer, :int],
      :blFontFaceCreateFromData => [:pointer, :pointer, :uint],
      :blFontFaceGetFullName => [:pointer, :pointer],
      :blFontFaceGetFamilyName => [:pointer, :pointer],
      :blFontFaceGetSubfamilyName => [:pointer, :pointer],
      :blFontFaceGetPostScriptName => [:pointer, :pointer],
      :blFontFaceGetFaceInfo => [:pointer, :pointer],
      :blFontFaceGetDesignMetrics => [:pointer, :pointer],
      :blFontFaceGetUnicodeCoverage => [:pointer, :pointer],
      :blFontFaceGetCharacterCoverage => [:pointer, :pointer],
      :blFontFaceHasScriptTag => [:pointer, :uint],
      :blFontFaceHasFeatureTag => [:pointer, :uint],
      :blFontFaceHasVariationTag => [:pointer, :uint],
      :blFontFaceGetScriptTags => [:pointer, :pointer],
      :blFontFaceGetFeatureTags => [:pointer, :pointer],
      :blFontFaceGetVariationTags => [:pointer, :pointer],
    }
    retvals = {
      :blFontFaceInit => :uint,
      :blFontFaceInitMove => :uint,
      :blFontFaceInitWeak => :uint,
      :blFontFaceDestroy => :uint,
      :blFontFaceReset => :uint,
      :blFontFaceAssignMove => :uint,
      :blFontFaceAssignWeak => :uint,
      :blFontFaceEquals => :int,
      :blFontFaceCreateFromFile => :uint,
      :blFontFaceCreateFromData => :uint,
      :blFontFaceGetFullName => :uint,
      :blFontFaceGetFamilyName => :uint,
      :blFontFaceGetSubfamilyName => :uint,
      :blFontFaceGetPostScriptName => :uint,
      :blFontFaceGetFaceInfo => :uint,
      :blFontFaceGetDesignMetrics => :uint,
      :blFontFaceGetUnicodeCoverage => :uint,
      :blFontFaceGetCharacterCoverage => :uint,
      :blFontFaceHasScriptTag => :int,
      :blFontFaceHasFeatureTag => :int,
      :blFontFaceHasVariationTag => :int,
      :blFontFaceGetScriptTags => :uint,
      :blFontFaceGetFeatureTags => :uint,
      :blFontFaceGetVariationTags => :uint,
    }
    symbols.each do |sym|
      begin
        attach_function apis[sym], sym, args[sym], retvals[sym]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{sym} (#{error}).") if output_error
      end
    end
  end

end

