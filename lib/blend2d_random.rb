# Ruby-Blend2D : Yet another Blend2D wrapper for Ruby
#
# * https://github.com/vaiorabbit/blend2d-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module Blend2D
  extend FFI::Library
  # Define/Macro


  # Enum


  # Typedef


  # Struct

  class BLRandom < FFI::Struct
    layout(
      :data, [:ulong_long, 2],
    )
  end


  # Function

  def self.setup_random_symbols(output_error = false)
    symbols = [
      :blRandomReset,
      :blRandomNextUInt32,
      :blRandomNextUInt64,
      :blRandomNextDouble,
    ]
    apis = {
      :blRandomReset => :blRandomReset,
      :blRandomNextUInt32 => :blRandomNextUInt32,
      :blRandomNextUInt64 => :blRandomNextUInt64,
      :blRandomNextDouble => :blRandomNextDouble,
    }
    args = {
      :blRandomReset => [:pointer, :ulong_long],
      :blRandomNextUInt32 => [:pointer],
      :blRandomNextUInt64 => [:pointer],
      :blRandomNextDouble => [:pointer],
    }
    retvals = {
      :blRandomReset => :uint,
      :blRandomNextUInt32 => :uint,
      :blRandomNextUInt64 => :ulong_long,
      :blRandomNextDouble => :double,
    }
    symbols.each do |sym|
      begin
        attach_function apis[sym], sym, args[sym], retvals[sym]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{sym} (#{error}).") if output_error
      end
    end
  end

end

