# Ruby-Blend2D : Yet another Blend2D wrapper for Ruby
#
# * https://github.com/vaiorabbit/blend2d-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'
require_relative 'blend2d_array'
require_relative 'blend2d_bitset'
require_relative 'blend2d_filesystem'
require_relative 'blend2d_fontdata'
require_relative 'blend2d_fontdefs'
require_relative 'blend2d_fontface'
require_relative 'blend2d_fontfeaturesettings'
require_relative 'blend2d_fontvariationsettings'
require_relative 'blend2d_geometry'
require_relative 'blend2d_glyphbuffer'
require_relative 'blend2d_glyphrun'
require_relative 'blend2d_object'
require_relative 'blend2d_path'
require_relative 'blend2d_string'

module Blend2D
  extend FFI::Library
  # Define/Macro


  # Enum


  # Typedef


  # Struct

  class BLFontCore < FFI::Struct
    layout(
      :_d, BLObjectDetail,
    )
  end

  class BLFontImpl < FFI::Struct
    layout(
      :face, BLFontFaceCore,
      :weight, :ushort,
      :stretch, :uchar,
      :style, :uchar,
      :reserved, :uint,
      :metrics, BLFontMetrics,
      :matrix, BLFontMatrix,
      :featureSettings, BLFontFeatureSettingsCore,
      :variationSettings, BLFontVariationSettingsCore,
    )
  end


  # Function

  def self.setup_font_symbols(output_error = false)
    symbols = [
      :blFontInit,
      :blFontInitMove,
      :blFontInitWeak,
      :blFontDestroy,
      :blFontReset,
      :blFontAssignMove,
      :blFontAssignWeak,
      :blFontEquals,
      :blFontCreateFromFace,
      :blFontCreateFromFaceWithSettings,
      :blFontGetFace,
      :blFontGetSize,
      :blFontSetSize,
      :blFontGetMetrics,
      :blFontGetMatrix,
      :blFontGetDesignMetrics,
      :blFontGetFeatureSettings,
      :blFontSetFeatureSettings,
      :blFontResetFeatureSettings,
      :blFontGetVariationSettings,
      :blFontSetVariationSettings,
      :blFontResetVariationSettings,
      :blFontShape,
      :blFontMapTextToGlyphs,
      :blFontPositionGlyphs,
      :blFontApplyKerning,
      :blFontApplyGSub,
      :blFontApplyGPos,
      :blFontGetTextMetrics,
      :blFontGetGlyphBounds,
      :blFontGetGlyphAdvances,
      :blFontGetGlyphOutlines,
      :blFontGetGlyphRunOutlines,
    ]
    apis = {
      :blFontInit => :blFontInit,
      :blFontInitMove => :blFontInitMove,
      :blFontInitWeak => :blFontInitWeak,
      :blFontDestroy => :blFontDestroy,
      :blFontReset => :blFontReset,
      :blFontAssignMove => :blFontAssignMove,
      :blFontAssignWeak => :blFontAssignWeak,
      :blFontEquals => :blFontEquals,
      :blFontCreateFromFace => :blFontCreateFromFace,
      :blFontCreateFromFaceWithSettings => :blFontCreateFromFaceWithSettings,
      :blFontGetFace => :blFontGetFace,
      :blFontGetSize => :blFontGetSize,
      :blFontSetSize => :blFontSetSize,
      :blFontGetMetrics => :blFontGetMetrics,
      :blFontGetMatrix => :blFontGetMatrix,
      :blFontGetDesignMetrics => :blFontGetDesignMetrics,
      :blFontGetFeatureSettings => :blFontGetFeatureSettings,
      :blFontSetFeatureSettings => :blFontSetFeatureSettings,
      :blFontResetFeatureSettings => :blFontResetFeatureSettings,
      :blFontGetVariationSettings => :blFontGetVariationSettings,
      :blFontSetVariationSettings => :blFontSetVariationSettings,
      :blFontResetVariationSettings => :blFontResetVariationSettings,
      :blFontShape => :blFontShape,
      :blFontMapTextToGlyphs => :blFontMapTextToGlyphs,
      :blFontPositionGlyphs => :blFontPositionGlyphs,
      :blFontApplyKerning => :blFontApplyKerning,
      :blFontApplyGSub => :blFontApplyGSub,
      :blFontApplyGPos => :blFontApplyGPos,
      :blFontGetTextMetrics => :blFontGetTextMetrics,
      :blFontGetGlyphBounds => :blFontGetGlyphBounds,
      :blFontGetGlyphAdvances => :blFontGetGlyphAdvances,
      :blFontGetGlyphOutlines => :blFontGetGlyphOutlines,
      :blFontGetGlyphRunOutlines => :blFontGetGlyphRunOutlines,
    }
    args = {
      :blFontInit => [:pointer],
      :blFontInitMove => [:pointer, :pointer],
      :blFontInitWeak => [:pointer, :pointer],
      :blFontDestroy => [:pointer],
      :blFontReset => [:pointer],
      :blFontAssignMove => [:pointer, :pointer],
      :blFontAssignWeak => [:pointer, :pointer],
      :blFontEquals => [:pointer, :pointer],
      :blFontCreateFromFace => [:pointer, :pointer, :float],
      :blFontCreateFromFaceWithSettings => [:pointer, :pointer, :float, :pointer, :pointer],
      :blFontGetFace => [:pointer, :pointer],
      :blFontGetSize => [:pointer],
      :blFontSetSize => [:pointer, :float],
      :blFontGetMetrics => [:pointer, :pointer],
      :blFontGetMatrix => [:pointer, :pointer],
      :blFontGetDesignMetrics => [:pointer, :pointer],
      :blFontGetFeatureSettings => [:pointer, :pointer],
      :blFontSetFeatureSettings => [:pointer, :pointer],
      :blFontResetFeatureSettings => [:pointer],
      :blFontGetVariationSettings => [:pointer, :pointer],
      :blFontSetVariationSettings => [:pointer, :pointer],
      :blFontResetVariationSettings => [:pointer],
      :blFontShape => [:pointer, :pointer],
      :blFontMapTextToGlyphs => [:pointer, :pointer, :pointer],
      :blFontPositionGlyphs => [:pointer, :pointer],
      :blFontApplyKerning => [:pointer, :pointer],
      :blFontApplyGSub => [:pointer, :pointer, :pointer],
      :blFontApplyGPos => [:pointer, :pointer, :pointer],
      :blFontGetTextMetrics => [:pointer, :pointer, :pointer],
      :blFontGetGlyphBounds => [:pointer, :pointer, :long, :pointer, :ulong],
      :blFontGetGlyphAdvances => [:pointer, :pointer, :long, :pointer, :ulong],
      :blFontGetGlyphOutlines => [:pointer, :uint, :pointer, :pointer, :BLPathSinkFunc, :pointer],
      :blFontGetGlyphRunOutlines => [:pointer, :pointer, :pointer, :pointer, :BLPathSinkFunc, :pointer],
    }
    retvals = {
      :blFontInit => :uint,
      :blFontInitMove => :uint,
      :blFontInitWeak => :uint,
      :blFontDestroy => :uint,
      :blFontReset => :uint,
      :blFontAssignMove => :uint,
      :blFontAssignWeak => :uint,
      :blFontEquals => :int,
      :blFontCreateFromFace => :uint,
      :blFontCreateFromFaceWithSettings => :uint,
      :blFontGetFace => :uint,
      :blFontGetSize => :float,
      :blFontSetSize => :uint,
      :blFontGetMetrics => :uint,
      :blFontGetMatrix => :uint,
      :blFontGetDesignMetrics => :uint,
      :blFontGetFeatureSettings => :uint,
      :blFontSetFeatureSettings => :uint,
      :blFontResetFeatureSettings => :uint,
      :blFontGetVariationSettings => :uint,
      :blFontSetVariationSettings => :uint,
      :blFontResetVariationSettings => :uint,
      :blFontShape => :uint,
      :blFontMapTextToGlyphs => :uint,
      :blFontPositionGlyphs => :uint,
      :blFontApplyKerning => :uint,
      :blFontApplyGSub => :uint,
      :blFontApplyGPos => :uint,
      :blFontGetTextMetrics => :uint,
      :blFontGetGlyphBounds => :uint,
      :blFontGetGlyphAdvances => :uint,
      :blFontGetGlyphOutlines => :uint,
      :blFontGetGlyphRunOutlines => :uint,
    }
    symbols.each do |sym|
      begin
        attach_function apis[sym], sym, args[sym], retvals[sym]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{sym} (#{error}).") if output_error
      end
    end
  end

end

