# Ruby-Blend2D : Yet another Blend2D wrapper for Ruby
#
# * https://github.com/vaiorabbit/blend2d-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'
require_relative 'blend2d_array'
require_relative 'blend2d_bitset'
require_relative 'blend2d_filesystem'
require_relative 'blend2d_fontdefs'
require_relative 'blend2d_geometry'
require_relative 'blend2d_glyphbuffer'
require_relative 'blend2d_object'
require_relative 'blend2d_path'
require_relative 'blend2d_string'

module Blend2D
  extend FFI::Library
  # Define/Macro


  # Enum


  # Typedef


  # Struct

  class BLFontFeatureItem < FFI::Struct
    layout(
      :tag, :uint,
      :value, :uint,
    )
  end

  class BLFontFeatureSettingsView < FFI::Struct
    layout(
      :data, :pointer,
      :size, :ulong,
      :ssoData, [BLFontFeatureItem, 36],
    )
  end

  class BLFontFeatureSettingsCore < FFI::Struct
    layout(
      :_d, BLObjectDetail,
    )
  end

  class BLFontFeatureSettingsImpl < FFI::Struct
    layout(
      :data, :pointer,
      :size, :ulong,
      :capacity, :ulong,
    )
  end


  # Function

  def self.setup_fontfeaturesettings_symbols(output_error = false)
    symbols = [
      :blFontFeatureSettingsInit,
      :blFontFeatureSettingsInitMove,
      :blFontFeatureSettingsInitWeak,
      :blFontFeatureSettingsDestroy,
      :blFontFeatureSettingsReset,
      :blFontFeatureSettingsClear,
      :blFontFeatureSettingsShrink,
      :blFontFeatureSettingsAssignMove,
      :blFontFeatureSettingsAssignWeak,
      :blFontFeatureSettingsGetSize,
      :blFontFeatureSettingsGetCapacity,
      :blFontFeatureSettingsGetView,
      :blFontFeatureSettingsHasValue,
      :blFontFeatureSettingsGetValue,
      :blFontFeatureSettingsSetValue,
      :blFontFeatureSettingsRemoveValue,
      :blFontFeatureSettingsEquals,
    ]
    apis = {
      :blFontFeatureSettingsInit => :blFontFeatureSettingsInit,
      :blFontFeatureSettingsInitMove => :blFontFeatureSettingsInitMove,
      :blFontFeatureSettingsInitWeak => :blFontFeatureSettingsInitWeak,
      :blFontFeatureSettingsDestroy => :blFontFeatureSettingsDestroy,
      :blFontFeatureSettingsReset => :blFontFeatureSettingsReset,
      :blFontFeatureSettingsClear => :blFontFeatureSettingsClear,
      :blFontFeatureSettingsShrink => :blFontFeatureSettingsShrink,
      :blFontFeatureSettingsAssignMove => :blFontFeatureSettingsAssignMove,
      :blFontFeatureSettingsAssignWeak => :blFontFeatureSettingsAssignWeak,
      :blFontFeatureSettingsGetSize => :blFontFeatureSettingsGetSize,
      :blFontFeatureSettingsGetCapacity => :blFontFeatureSettingsGetCapacity,
      :blFontFeatureSettingsGetView => :blFontFeatureSettingsGetView,
      :blFontFeatureSettingsHasValue => :blFontFeatureSettingsHasValue,
      :blFontFeatureSettingsGetValue => :blFontFeatureSettingsGetValue,
      :blFontFeatureSettingsSetValue => :blFontFeatureSettingsSetValue,
      :blFontFeatureSettingsRemoveValue => :blFontFeatureSettingsRemoveValue,
      :blFontFeatureSettingsEquals => :blFontFeatureSettingsEquals,
    }
    args = {
      :blFontFeatureSettingsInit => [:pointer],
      :blFontFeatureSettingsInitMove => [:pointer, :pointer],
      :blFontFeatureSettingsInitWeak => [:pointer, :pointer],
      :blFontFeatureSettingsDestroy => [:pointer],
      :blFontFeatureSettingsReset => [:pointer],
      :blFontFeatureSettingsClear => [:pointer],
      :blFontFeatureSettingsShrink => [:pointer],
      :blFontFeatureSettingsAssignMove => [:pointer, :pointer],
      :blFontFeatureSettingsAssignWeak => [:pointer, :pointer],
      :blFontFeatureSettingsGetSize => [:pointer],
      :blFontFeatureSettingsGetCapacity => [:pointer],
      :blFontFeatureSettingsGetView => [:pointer, :pointer],
      :blFontFeatureSettingsHasValue => [:pointer, :uint],
      :blFontFeatureSettingsGetValue => [:pointer, :uint],
      :blFontFeatureSettingsSetValue => [:pointer, :uint, :uint],
      :blFontFeatureSettingsRemoveValue => [:pointer, :uint],
      :blFontFeatureSettingsEquals => [:pointer, :pointer],
    }
    retvals = {
      :blFontFeatureSettingsInit => :uint,
      :blFontFeatureSettingsInitMove => :uint,
      :blFontFeatureSettingsInitWeak => :uint,
      :blFontFeatureSettingsDestroy => :uint,
      :blFontFeatureSettingsReset => :uint,
      :blFontFeatureSettingsClear => :uint,
      :blFontFeatureSettingsShrink => :uint,
      :blFontFeatureSettingsAssignMove => :uint,
      :blFontFeatureSettingsAssignWeak => :uint,
      :blFontFeatureSettingsGetSize => :ulong,
      :blFontFeatureSettingsGetCapacity => :ulong,
      :blFontFeatureSettingsGetView => :uint,
      :blFontFeatureSettingsHasValue => :int,
      :blFontFeatureSettingsGetValue => :uint,
      :blFontFeatureSettingsSetValue => :uint,
      :blFontFeatureSettingsRemoveValue => :uint,
      :blFontFeatureSettingsEquals => :int,
    }
    symbols.each do |sym|
      begin
        attach_function apis[sym], sym, args[sym], retvals[sym]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{sym} (#{error}).") if output_error
      end
    end
  end

end

